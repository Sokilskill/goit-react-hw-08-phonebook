{"version":3,"file":"static/js/671.9ca190de.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/selector.js","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/MainTitle/MainTitle.module.css?cf7d","components/MainTitle/MainTitle.jsx","pages/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"btnSubmit\":\"ContactForm_btnSubmit__+7wnS\"};","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts;\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  ({ items }, filter) => {\n    return items.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import { useState } from 'react';\nimport css from './ContactForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/selector';\nimport { addContact } from 'redux/operations';\n\nconst ContactForm = () => {\n  const { items } = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handlerInputChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        return;\n      case 'number':\n        setNumber(value);\n        return;\n      default:\n        return;\n    }\n  };\n\n  const handlerFormSubmit = e => {\n    e.preventDefault();\n    const similarElement = element => element.name === name;\n    if (items && items.find(similarElement)) {\n      alert(name + ' is already in contacts.');\n      return;\n    }\n    const newContact = { name, number };\n    dispatch(addContact(newContact));\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handlerFormSubmit} className={css.form}>\n      <label className={css.label}>\n        Name\n        <input\n          className={css.input}\n          onChange={handlerInputChange}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          placeholder=\"Сергій - Serhii \"\n          // pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          pattern=\"^[a-zA-Zа-яА-ЯєіїЄІЇ]+(([' \\-][a-zA-Zа-яА-ЯєіїЄІЇ ])?[a-zA-Zа-яА-ЯєіїЄІЇ]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label className={css.label}>\n        Number\n        <input\n          className={css.input}\n          onChange={handlerInputChange}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          placeholder=\"099-123-45-67 - 0991234567\"\n          // pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n\n      <button className={css.btnSubmit} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"item\":\"ContactList_item__EZYHO\"};","import React, { useEffect } from 'react';\nimport css from './ContactList.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts, selectVisibleContacts } from 'redux/selector';\nimport { deleteContact, fetchContacts } from 'redux/operations';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n\n  const contactsList = useSelector(selectVisibleContacts);\n  const { items, isLoading, error } = useSelector(selectContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return isLoading && !error ? (\n    <p>Loading...</p>\n  ) : (\n    <ul className={css.list}>\n      {items &&\n        contactsList.map(contact => {\n          const { id, name, number } = contact;\n          return (\n            <li className={css.item} key={id}>\n              <p>\n                {name}: {number}\n              </p>\n\n              <button\n                type=\"button\"\n                onClick={() => {\n                  dispatch(deleteContact(id));\n                }}\n              >\n                Delete\n              </button>\n            </li>\n          );\n        })}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\"};","import React from 'react';\nimport css from './Filter.module.css';\nimport { useDispatch } from 'react-redux';\nimport { inputFilter } from 'redux/filterSlice.js/filterSlice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const handlerInputFilter = e => {\n    const { value } = e.target;\n    dispatch(inputFilter(value));\n  };\n\n  return (\n    <label className={css.label}>\n      Find contacts by name:\n      <input\n        className={css.input}\n        type=\"text\"\n        name=\"filter\"\n        onChange={handlerInputFilter}\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"MainTitle_title__VZ5dh\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport css from './MainTitle.module.css';\n\nconst MainTitle = ({ title }) => {\n  return <h2 className={css.title}>{title}</h2>;\n};\n\nMainTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default MainTitle;\n","import ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport MainTitle from 'components/MainTitle/MainTitle';\n\nconst ContactsPage = () => {\n  return (\n    <>\n      <MainTitle title=\"Phonebook\" />\n      <ContactForm />\n      <MainTitle title=\"Contacts\" />\n      <Filter />\n      <ContactList />\n    </>\n  );\n};\nexport default ContactsPage;\n"],"names":["NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contacts","selectVisibleContacts","filter","_ref","items","contact","toLowerCase","includes","useSelector","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","number","setNumber","handlerInputChange","e","_e$target","target","_jsxs","onSubmit","preventDefault","element","alert","newContact","addContact","className","css","children","_jsx","onChange","type","placeholder","pattern","title","required","contactsList","_useSelector","isLoading","error","useEffect","fetchContacts","id","onClick","deleteContact","inputFilter","_Fragment","MainTitle","ContactForm","Filter","ContactList"],"sourceRoot":""}